DROP DATABASE IF EXISTS c19pm;
CREATE SCHEMA IF NOT EXISTS c19pm DEFAULT CHARACTER SET utf8;
USE c19pm;

DROP TABLE IF EXISTS locality;

CREATE TABLE IF NOT EXISTS locality (
  idLocality INT NOT NULL AUTO_INCREMENT,
  localityName VARCHAR(50) NULL,
  nbPopulation INT NULL,
  regionName VARCHAR(50),
  PRIMARY KEY (idLocality)
);

INSERT INTO locality (localityName, nbPopulation, regionName) VALUES
("Dakar",1146052,"Dakar"),
("Guédiawaye",329658,"Dakar"),
("Pikine",1170791,"Dakar"),
("Rufisque",490695,"Dakar"),
("Bambey",299476,"Diourbel"),
("Diourbel",268215,"Diourbel"),
("Mbacké",929764,"Diourbel"),
("Fatick",339238,"Fatick"),
("Foundiougne",279436,"Fatick"),
("Gossas",95715,"Fatick"),
("Kaffrine",207676,"Kaffrine"),
("Birkilane",101217,"Kaffrine"),
("Koungheul",163438,"Kaffrine"),
("Malem Hoddar",94662,"Kaffrine"),
("Guinguinéo",115184,"Kaolack"),
("Kaolack",488765,"Kaolack"),
("Nioro Du Rip",356927,"Kaolack"),
("Kédougou",78522,"Kédougou"),
("Salémata",22111,"Kédougou"),
("Saraya",50724,"Kédougou"),
("Kolda",245990,"Kolda"),
("Médina Yoro Foulah",138084,"Kolda"),
("Vélingara",278382,"Kolda"),
("Kébémer",259083,"Louga"),
("Linguère",241898,"Louga"),
("Louga",373212,"Louga"),
("Kanel",238605,"Matam"),
("Matam",272621,"Matam"),
("Ranérou Ferlo",51313,"Matam"),
("Dagana",241695,"Saint-Louis"),
("Podor",370751,"Saint-Louis"),
("Saint-Louis",296496,"Saint-Louis"),
("Bounkiling",145568,"Sédhiou"),
("Goudomp",156095,"Sédhiou"),
("Sédhiou",151331,"Sédhiou"),
("Bakel",138867,"Tambacounda"),
("Goudiry",114847,"Tambacounda"),
("Koupentoum",128433,"Tambacounda"),
("Tambacounda",299163,"Tambacounda"),
("M'bour",668878,"Thiès"),
("Thiès",667814,"Thiès"),
("Tivaouane",452172,"Thiès"),
("Bignona",252554,"Ziguinchor"),
("Oussouye",48332,"Ziguinchor"),
("Ziguinchor",248265,"Ziguinchor");

DROP TABLE IF EXISTS distance;

CREATE TABLE IF NOT EXISTS distance (
  idDistance INT NOT NULL AUTO_INCREMENT,
  distance FLOAT NULL,
  idLocality1 INT NOT NULL,
  idLocality2 INT NOT NULL,
  PRIMARY KEY (idDistance),
  CONSTRAINT fk_locs_loc1 FOREIGN KEY (idLocality1) REFERENCES locality (idLocality),
  CONSTRAINT fk_locs_loc2 FOREIGN KEY (idLocality2) REFERENCES locality (idLocality)
);

INSERT INTO distance(idLocality1,idLocality2,distance) VALUES
(1,2,10.87),(1,3,9.75),(1,4,26.99),(1,5,104.10),(1,6,144.77),(1,7,165.53),(1,8,111.41),(1,9,140.34),(1,10,173.34),(1,11,214.12),(1,12,201.28),(1,13,284.45),(1,14,241.39),(1,15,169.77),(1,16,159.51),(1,17,203.18),(1,18,617.10),(1,19,549.88),(1,20,648.21),(1,21,336.29),(1,22,336.24),(1,23,399.04),(1,24,131.13),(1,25,261.54),(1,26,166.48),(1,27,466.47),(1,28,409.23),(1,29,409.23),(1,30,241.24),(1,31,343.99),(1,32,179.32),(1,33,263.41),(1,34,290.41),(1,35,300.51),(1,36,562.66),(1,37,494.69),(1,38,419.79),(1,39,489.93),(1,40,60.28),(1,41,56.72),(1,42,73.66),(1,43,232.52),(1,44,261.32),(1,45,268.09),(2,3,1.83),(2,4,21.70),(2,5,98.30),(2,6,139.42),(2,7,160.05),(2,8,111.20),(2,9,143.11),(2,10,169.80),(2,11,212.42),(2,12,200.06),(2,13,281.28),(2,14,239.36),(2,15,167.63),(2,16,158.74),(2,17,204.13),(2,18,616.07),(2,19,549.24),(2,20,646.40),(2,21,338.02),(2,22,338.01),(2,23,398.64),(2,24,121.54),(2,25,253.89),(2,26,156.59),(2,27,459.56),(2,28,402.97),(2,29,402.97),(2,30,230.79),(2,31,335.12),(2,32,168.53),(2,33,266.62),(2,34,295.36),(2,35,304.23),(2,36,558.42),(2,37,491.21),(2,38,417.24),(2,39,487.85),(2,40,61.86),(2,41,50.61),(2,42,65.57),(2,43,238.45),(2,44,268.70),(2,45,274.27),(3,4,20.81),(3,5,97.73),(3,6,138.78),(3,7,159.44),(3,8,109.80),(3,9,141.45),(3,10,168.86),(3,11,211.23),(3,12,198.80),(3,13,280.31),(3,14,238.21),(3,15,166.48),(3,16,157.43),(3,17,202.63),(3,18,614.81),(3,19,547.94),(3,20,645.24),(3,21,336.46),(3,22,336.45),(3,23,397.31),(3,24,121.94),(3,25,253.75),(3,26,157.11),(3,27,459.26),(3,28,402.53),(3,29,402.53),(3,30,231.58),(3,31,335.31),(3,32,169.57),(3,33,264.94),(3,34,293.58),(3,35,302.52),(3,36,557.62),(3,37,490.29),(3,38,416.18),(3,39,486.73),(3,40,60.25),(3,41,50.04),(3,42,65.49),(3,43,236.63),(3,44,266.87),(3,45,272.46),(4,5,77.25),(4,6,118.14),(4,7,138.84),(4,8,90.94),(4,9,125.73),(4,10,148.10),(4,11,191.06),(4,12,178.91),(4,13,259.59),(4,14,217.87),(4,15,146.15),(4,16,137.91),(4,17,184.47),(4,18,594.89),(4,19,528.25),(4,20,624.92),(4,21,318.88),(4,22,318.93),(4,23,377.82),(4,24,106.85),(4,25,234.71),(4,26,142.82),(4,27,439.48),(4,28,382.31),(4,29,382.31),(4,30,219.53),(4,31,318.05),(4,32,160.81),(4,33,249.27),(4,34,280.51),(4,35,287.50),(4,36,536.81),(4,37,469.51),(4,38,395.61),(4,39,466.31),(4,40,44.57),(4,41,29.73),(4,42,47.46),(4,43,225.54),(4,44,258.82),(4,45,261.73),(5,6,41.33),(5,7,61.78),(5,8,57.78),(5,9,103.75),(5,10,76.64),(5,11,126.76),(5,12,118.08),(5,13,187.22),(5,14,150.85),(5,15,82.43),(5,16,84.76),(5,17,137.47),(5,18,528.33),(5,19,463.62),(5,20,555.36),(5,21,269.70),(5,22,270.04),(5,23,315.52),(5,24,63.10),(5,25,160.51),(5,26,94.87),(5,27,362.94),(5,28,305.16),(5,29,305.16),(5,30,174.09),(5,31,249.11),(5,32,135.13),(5,33,213.50),(5,34,256.51),(5,35,253.46),(5,36,461.04),(5,37,395.36),(5,38,324.33),(5,39,396.32),(5,40,67.76),(5,41,47.70),(5,42,39.16),(5,43,213.96),(5,44,258.06),(5,45,249.51),(6,7,20.81),(6,8,68.86),(6,9,106.88),(6,10,40.95),(6,11,94.32),(6,12,89.29),(6,13,147.45),(6,14,115.20),(6,15,55.48),(6,16,68.42),(6,17,118.09),(6,18,490.33),(6,19,426.66),(6,20,516.01),(6,21,242.93),(6,22,243.46),(6,23,280.45),(6,24,76.42),(6,25,126.38),(6,26,95.67),(6,27,324.10),(6,28,265.15),(6,29,265.15),(6,30,167.48),(6,31,219.55),(6,32,145.27),(6,33,196.79),(6,34,245.20),(6,35,236.30),(6,36,419.74),(6,37,354.42),(6,38,284.58),(6,39,357.00),(6,40,101.17),(6,41,88.85),(6,42,79.33),(6,43,211.62),(6,44,259.72),(6,45,245.20),(7,8,85.08),(7,9,118.22),(7,10,33.85),(7,11,85.27),(7,12,83.62),(7,13,129.99),(7,14,102.49),(7,15,54.66),(7,16,73.16),(7,17,117.57),(7,18,473.87),(7,19,411.11),(7,20,498.36),(7,21,235.29),(7,22,235.93),(7,23,266.69),(7,24,86.24),(7,25,108.15),(7,26,98.16),(7,27,303.53),(7,28,244.37),(7,29,244.37),(7,30,163.27),(7,31,202.87),(7,32,150.07),(7,33,195.87),(7,34,246.66),(7,35,234.62),(7,36,399.67),(7,37,335.11),(7,38,266.74),(7,39,339.49),(7,40,121.34),(7,41,109.45),(7,42,98.88),(7,43,218.00),(7,44,267.47),(7,45,250.24),(8,9,46.19),(8,10,74.08),(8,11,104.21),(8,12,90.50),(8,13,178.46),(8,14,132.04),(8,15,62.44),(8,16,48.33),(8,17,93.80),(8,18,505.77),(8,19,438.47),(8,20,537.57),(8,21,228.59),(8,22,228.69),(8,23,287.66),(8,24,120.86),(8,25,193.16),(8,26,151.41),(8,27,382.17),(8,28,320.14),(8,29,320.14),(8,30,229.33),(8,31,287.78),(8,32,192.88),(8,33,163.19),(8,34,201.86),(8,35,202.68),(8,36,459.16),(8,37,388.39),(8,38,310.85),(8,39,379.83),(8,40,52.16),(8,41,72.59),(8,42,81.57),(8,43,156.50),(8,44,200.30),(8,45,192.31),(9,10,95.46),(9,11,101.27),(9,12,85.65),(9,13,178.64),(9,14,128.06),(9,15,74.99),(9,16,52.02),(9,17,68.40),(9,18,486.10),(9,19,417.26),(9,20,521.55),(9,21,196.66),(9,22,196.53),(9,23,266.45),(9,24,166.68),(9,25,222.46),(9,26,196.05),(9,27,397.37),(9,28,333.20),(9,29,333.20),(9,30,272.61),(9,31,318.80),(9,32,238.87),(9,33,123.60),(9,34,157.40),(9,35,161.82),(9,36,456.76),(9,37,382.82),(9,38,301.45),(9,39,366.57),(9,40,81.46),(9,41,114.03),(9,42,126.21),(9,43,110.31),(9,44,154.91),(9,45,146.14),(10,11,53.45),(10,12,49.99),(10,13,111.61),(10,14,74.78),(10,15,22.88),(10,16,44.94),(10,17,84.14),(10,18,451.70),(10,19,387.22),(10,20,478.94),(10,21,202.82),(10,22,203.40),(10,23,240.03),(10,24,116.69),(10,25,127.29),(10,26,131.70),(10,27,308.25),(10,28,246.06),(10,29,246.06),(10,30,196.49),(10,31,223.77),(10,32,183.18),(10,33,162.15),(10,34,213.46),(10,35,200.80),(10,36,389.59),(10,37,321.43),(10,38,248.30),(10,39,319.94),(10,40,120.81),(10,41,120.74),(10,42,115.80),(10,43,187.73),(10,44,238.10),(10,45,218.82),(11,12,15.62),(11,13,77.48),(11,14,27.99),(11,15,45.28),(11,16,56.50),(11,17,51.67),(11,18,404.00),(11,19,338.03),(11,20,434.09),(11,21,150.02),(11,22,150.67),(11,23,188.91),(11,24,170.08),(11,25,150.69),(11,26,183.12),(11,27,299.56),(11,28,234.52),(11,29,234.52),(11,30,242.02),(11,31,244.13),(11,32,235.29),(11,33,119.47),(11,34,174.13),(11,35,155.44),(11,36,357.27),(11,37,285.01),(11,38,206.65),(11,39,275.89),(11,40,156.23),(11,41,166.45),(11,42,165.21),(11,43,162.38),(11,44,213.93),(11,45,188.03),(12,13,93.06),(12,14,43.03),(12,15,35.68),(12,16,42.25),(12,17,40.40),(12,18,416.02),(12,19,349.41),(12,20,447.12),(12,21,153.69),(12,22,154.20),(12,23,199.38),(12,24,165.71),(12,25,159.80),(12,26,181.68),(12,27,314.54),(12,28,249.64),(12,29,249.64),(12,30,244.41),(12,31,254.55),(12,32,233.14),(12,33,114.27),(12,34,167.58),(12,35,151.96),(12,36,372.52),(12,37,299.90),(12,38,220.84),(12,39,289.35),(12,40,142.66),(12,41,155.35),(12,42,155.70),(12,43,151.03),(12,44,202.55),(12,45,178.37),(13,14,50.95),(13,15,116.16),(13,16,132.69),(13,17,120.90),(13,18,344.14),(13,19,282.60),(13,20,368.58),(13,21,149.61),(13,22,150.85),(13,23,144.92),(13,24,213.04),(13,25,132.23),(13,26,213.55),(13,27,229.16),(13,28,163.59),(13,29,163.59),(13,30,251.03),(13,31,208.30),(13,32,265.38),(13,33,161.64),(13,34,216.05),(13,35,186.55),(13,36,280.78),(13,37,210.41),(13,38,137.17),(13,39,209.60),(13,40,229.34),(13,41,232.33),(13,42,226.23),(13,43,223.26),(13,44,273.18),(13,45,241.41),(14,15,71.73),(14,16,84.49),(14,17,70.91),(14,18,377.96),(14,19,312.78),(14,20,407.05),(14,21,138.06),(14,22,138.94),(14,23,165.28),(14,24,188.72),(14,25,146.57),(14,26,197.54),(14,27,277.51),(14,28,212.05),(14,29,212.05),(14,30,249.61),(14,31,235.55),(14,32,250.20),(14,33,124.34),(14,34,179.99),(14,35,156.07),(14,36,329.50),(14,37,257.03),(14,38,178.84),(14,39,248.55),(14,40,183.95),(14,41,192.48),(14,42,189.81),(14,43,177.66),(14,44,228.67),(14,45,199.58),(15,16,23.12),(15,17,63.30),(15,18,449.21),(15,19,383.30),(15,20,478.78),(15,21,188.71),(15,22,189.16),(15,23,234.00),(15,24,131.56),(15,25,149.28),(15,26,150.34),(15,27,324.22),(15,28,260.90),(15,29,260.90),(15,30,217.93),(15,31,245.77),(15,32,200.67),(15,33,141.97),(15,34,192.05),(15,35,181.21),(15,36,396.75),(15,37,326.38),(15,38,250.08),(15,39,320.25),(15,40,113.27),(15,41,121.17),(15,42,120.33),(15,43,164.88),(15,44,215.22),(15,45,196.20),(16,17,52.75),(16,18,457.59),(16,19,390.52),(16,20,489.24),(16,21,185.82),(16,22,186.09),(16,23,239.92),(16,24,141.05),(16,25,172.10),(16,26,163.90),(16,27,346.09),(16,28,282.34),(16,29,282.34),(16,30,235.10),(16,31,268.60),(16,32,212.26),(16,33,130.08),(16,34,176.93),(16,35,169.97),(16,36,413.30),(16,37,341.46),(16,38,262.99),(16,39,331.58),(16,40,100.48),(16,41,116.05),(16,42,119.38),(16,43,144.86),(16,44,194.42),(16,45,177.46),(17,18,417.93),(17,19,349.34),(17,20,453.15),(17,21,134.88),(17,22,135.02),(17,23,198.36),(17,24,192.93),(17,25,200.20),(17,26,213.50),(17,27,348.38),(17,28,282.95),(17,29,282.95),(17,30,280.63),(17,31,294.86),(17,32,263.28),(17,33,78.74),(17,34,129.36),(17,35,118.22),(17,36,392.37),(17,37,317.17),(17,38,234.61),(17,39,298.50),(17,40,142.91),(17,41,165.71),(17,42,171.16),(17,43,110.90),(17,44,162.46),(17,45,138.02),(18,19,70.25),(18,20,55.31),(18,21,302.35),(18,22,303.16),(18,23,219.65),(18,24,556.88),(18,25,448.16),(18,26,554.00),(18,27,348.82),(18,28,332.36),(18,29,332.36),(18,30,573.93),(18,31,471.36),(18,32,603.79),(18,33,385.56),(18,34,401.63),(18,35,367.27),(18,36,187.45),(18,37,177.47),(18,38,210.85),(18,39,138.53),(18,40,557.68),(18,41,570.34),(18,42,567.45),(18,43,456.34),(18,44,482.09),(18,45,444.71),(19,20,117.36),(19,21,232.11),(19,22,232.91),(19,23,151.07),(19,24,495.52),(19,25,395.02),(19,26,495.15),(19,27,324.83),(19,28,296.34),(19,29,296.34),(19,30,521.16),(19,31,429.09),(19,32,546.05),(19,33,315.33),(19,34,331.96),(19,35,297.27),(19,36,189.00),(19,37,149.96),(19,38,156.48),(19,39,92.18),(19,40,490.13),(19,41,504.44),(19,42,502.59),(19,43,386.16),(19,44,412.60),(19,45,375.03),(20,21,345.39),(20,22,346.33),(20,23,257.21),(20,24,578.76),(20,25,461.20),(20,26,572.59),(20,27,337.33),(20,28,331.40),(20,29,331.40),(20,30,585.23),(20,31,473.17),(20,32,620.65),(20,33,427.65),(20,34,447.92),(20,35,412.46),(20,36,164.53),(20,37,178.43),(20,38,231.64),(20,39,159.04),(20,40,589.73),(20,41,599.13),(20,42,594.49),(20,43,500.19),(20,44,528.76),(20,45,490.92),(21,22,1.51),(21,23,94.61),(21,24,319.30),(21,25,278.81),(21,26,333.04),(21,27,349.00),(21,28,287.70),(21,29,287.70),(21,30,387.65),(21,31,357.73),(21,32,385.30),(21,33,83.41),(21,34,107.54),(21,35,69.89),(21,36,327.95),(21,37,250.37),(21,38,168.83),(21,39,207.90),(21,40,276.29),(21,41,300.57),(21,42,305.20),(21,43,154.81),(21,44,187.31),(21,45,148.95),(22,23,95.87),(22,24,319.84),(22,25,279.91),(22,26,333.72),(22,27,350.50),(22,28,289.18),(22,29,289.18),(22,30,388.54),(22,31,359.00),(22,32,385.96),(22,33,82.72),(22,34,106.26),(22,35,68.64),(22,36,329.33),(22,37,251.77),(22,38,170.29),(22,39,209.14),(22,40,276.27),(22,41,300.72),(22,42,305.46),(22,43,153.86),(22,44,186.11),(22,45,147.75),(23,24,352.65),(23,25,272.71),(23,26,357.06),(23,27,283.09),(23,28,229.53),(23,29,229.53),(23,30,395.23),(23,31,331.42),(23,32,409.37),(23,33,172.44),(23,34,202.12),(23,35,164.49),(23,36,235.34),(23,37,158.84),(23,38,84.10),(23,39,113.32),(23,40,339.17),(23,41,354.73),(23,42,354.12),(23,43,246.82),(23,44,281.80),(23,45,243.45),(24,25,141.94),(24,26,36.34),(24,27,349.52),(24,28,298.66),(24,29,298.66),(24,30,115.55),(24,31,214.82),(24,32,72.34),(24,33,271.09),(24,34,316.92),(24,35,310.92),(24,36,469.09),(24,37,410.11),(24,38,347.56),(24,39,420.75),(24,40,120.34),(24,41,82.71),(24,42,61.07),(24,43,276.68),(24,44,321.16),(24,45,311.98),(25,26,120.98),(25,27,207.73),(25,28,157.87),(25,29,157.87),(25,30,126.17),(25,31,96.50),(25,32,162.20),(25,33,269.08),(25,34,324.36),(25,35,302.51),(25,36,335.32),(25,37,284.98),(25,38,238.84),(25,39,309.67),(25,40,226.55),(25,41,205.33),(25,42,188.33),(25,43,310.31),(25,44,361.64),(25,45,338.13),(26,27,325.57),(26,28,278.77),(26,29,278.77),(26,30,79.87),(26,31,183.40),(26,32,52.69),(26,33,292.23),(26,34,340.81),(26,35,331.55),(26,36,454.88),(26,37,400.12),(26,38,343.30),(26,39,416.32),(26,40,156.04),(26,41,119.04),(26,42,97.41),(26,43,304.75),(26,44,350.95),(26,45,339.26),(27,28,65.58),(27,29,65.58),(27,30,299.71),(27,31,161.82),(27,32,357.61),(27,33,387.08),(27,34,438.70),(27,35,404.86),(27,36,176.33),(27,37,175.27),(27,38,202.51),(27,39,235.52),(27,40,424.65),(27,41,409.77),(27,42,394.39),(27,43,452.26),(27,44,501.64),(27,45,468.45),(28,29,0.00),(28,30,266.66),(28,31,142.11),(28,32,316.81),(28,33,322.13),(28,34,374.32),(28,35,341.10),(28,36,185.11),(28,37,155.17),(28,38,155.22),(28,39,204.20),(28,40,364.48),(28,41,352.61),(28,42,338.67),(28,43,386.73),(28,44,436.24),(28,45,403.31),(29,30,266.66),(29,31,142.11),(29,32,316.81),(29,33,322.13),(29,34,374.32),(29,35,341.10),(29,36,185.11),(29,37,155.17),(29,38,155.22),(29,39,204.20),(29,40,364.48),(29,41,352.61),(29,42,338.67),(29,43,386.73),(29,44,436.24),(29,45,403.31),(30,31,140.36),(30,32,69.93),(30,33,358.36),(30,34,409.89),(30,35,396.36),(30,36,451.08),(30,37,407.60),(30,38,365.00),(30,39,435.55),(30,40,235.80),(30,41,197.81),(30,42,176.07),(30,43,379.09),(30,44,426.87),(30,45,412.49),(31,32,204.02),(31,33,359.85),(31,34,415.49),(31,35,390.67),(31,36,325.24),(31,37,295.70),(31,38,276.20),(31,39,337.77),(31,40,316.71),(31,41,290.01),(31,42,270.59),(31,43,405.55),(31,44,457.03),(31,45,432.15),(32,33,341.88),(32,34,388.79),(32,35,381.50),(32,36,497.34),(32,37,446.21),(32,38,392.94),(32,39,465.66),(32,40,185.76),(32,41,144.39),(32,42,123.54),(32,43,348.98),(32,44,393.02),(32,45,384.32),(33,34,55.65),(33,35,39.96),(33,36,396.43),(33,37,318.52),(33,38,233.96),(33,39,284.36),(33,40,205.05),(33,41,235.43),(33,42,244.24),(33,43,75.09),(33,44,117.37),(33,45,81.74),(34,35,37.80),(34,36,434.69),(34,37,356.84),(34,38,273.78),(34,39,315.35),(34,40,236.03),(34,41,271.36),(34,42,283.23),(34,43,63.59),(34,44,80.91),(34,45,43.08),(35,36,396.91),(35,37,319.09),(35,38,236.21),(35,39,277.78),(35,40,243.06),(35,41,274.64),(35,42,283.93),(35,43,90.19),(35,44,117.61),(35,45,79.27),(36,37,78.00),(36,38,162.50),(36,39,130.04),(36,40,509.55),(36,41,508.21),(36,42,498.49),(36,43,471.12),(36,44,511.94),(36,45,474.08),(37,38,84.73),(37,39,65.68),(37,40,439.65),(37,41,441.66),(37,42,433.74),(37,43,393.29),(37,44,433.94),(37,45,396.10),(38,39,73.20),(38,40,362.79),(38,41,368.96),(38,42,363.38),(38,43,308.63),(38,44,349.87),(38,45,312.23),(39,40,431.97),(39,41,440.26),(39,42,435.45),(39,43,359.23),(39,44,395.11),(39,45,356.76),(40,41,42.21),(40,42,62.22),(40,43,181.94),(40,44,217.50),(40,45,218.26),(41,42,21.74),(41,43,220.49),(41,44,258.36),(41,45,256.88),(42,43,235.08),(42,44,275.02),(42,45,271.36),(43,44,51.56),(43,45,36.40),(44,45,38.37);

DROP TABLE IF EXISTS monthStat;

CREATE TABLE IF NOT EXISTS monthStat (
  idMonth INT NOT NULL AUTO_INCREMENT,
  totalCases INT NULL DEFAULT 0,
  totalHealed INT NULL DEFAULT 0,
  totalDeath INT NULL DEFAULT 0,
  sourceFileName VARCHAR(7) NULL,
  PRIMARY KEY (idMonth)
);

DROP TABLE IF EXISTS dayStat;

CREATE TABLE IF NOT EXISTS dayStat (
  idDay INT NOT NULL AUTO_INCREMENT,
  annoucementDate DATE NULL,
  numberOfTests INT NULL,
  numberOfNewCases INT NULL,
  numberOfContactCases INT NULL,
  numberOfCommunityCases INT NULL,
  numberOfHealed INT NULL,
  numberOfDeaths INT NULL,
  extractionDate DATE NULL,
  idMonth INT NOT NULL,
  PRIMARY KEY (idDay),
  CONSTRAINT fk_days_mont FOREIGN KEY (idMonth) REFERENCES monthStat (idMonth)
);

DROP TABLE IF EXISTS localityStat;

CREATE TABLE IF NOT EXISTS localityStat (
  idLocalityStat INT NOT NULL AUTO_INCREMENT,
  newCases INT NULL,
  isRegion BOOLEAN DEFAULT false,
  idDay INT NOT NULL,
  idLocality INT NOT NULL,
  PRIMARY KEY (idLocalityStat),
  CONSTRAINT fk_locs_days FOREIGN KEY (idDay) REFERENCES dayStat (idDay),
  CONSTRAINT fk_locs_loc FOREIGN KEY (idLocality) REFERENCES locality (idLocality)
);

-- CREATE FUNCTION getPopulation (idL INT)
-- RETURNS INT
-- DETERMINISTIC
-- BEGIN
--   DECLARE v_nbPopulation INT;

--   SELECT nbPopulation FROM locality WHERE idLocality = idL
--   INTO v_nbPopulation;

--   RETURN v_nbPopulation;
-- END;

-- CREATE VIEW ConcCumul AS
-- SELECT idLocality, t1.annoucementDate, t1.newCases, (
--     SELECT SUM(newCases) / getPopulation(t1.idLocality)
--     FROM localityStat
--     NATURAL JOIN dayStat
--     WHERE idLocality = t1.idLocality
--     AND annoucementDate <= t1.annoucementDate
-- ) AS Conc FROM (
--     SELECT * FROM localityStat NATURAL JOIN dayStat
--     WHERE idLocality IN (
--         SELECT idLocality FROM localityStat
--     )
--     AND DATE_FORMAT(annoucementDate, '%Y-%m') IN (SELECT sourceFileName FROM monthStat)
--     ORDER BY idLocality, annoucementDate
-- ) t1;

-- CREATE FUNCTION progressionRate(
--     v_idLocality INT,
--     v_Conc INT,
--     v_currentDATE DATE
-- )
-- RETURNS FLOAT
-- DETERMINISTIC
-- BEGIN
--     DECLARE v_Conc_Previous FLOAT;

--     SET v_Conc_Previous := 0;

--     SELECT (MAX(Conc) - v_Conc) / getPopulation(v_idLocality)
--     FROM ConcCumul WHERE idLocality = v_idLocality
--     AND annoucementDate <= v_currentDATE
--     GROUP BY DATE_FORMAT(annoucementDate, '%Y-%m') ORDER BY DATE_FORMAT(annoucementDate, '%Y-%m') DESC LIMIT 1, 1
--     INTO v_Conc_Previous;

--     RETURN v_Conc_Previous;

-- END;

-- CREATE VIEW EvolutionStat AS
-- SELECT idLocality, annoucementDate, newCases, Conc, progressionRate(idLocality, Conc, annoucementDate) AS Prog FROM ConcCumul;

-- DROP TABLE IF EXISTS TransmissionScenario;

-- CREATE TABLE IF NOT EXISTS TransmissionScenario (
--   idOrigin INT NOT NULL,
--   idContamin INT NOT NULL,
--   contaminationDate DATE NULL,
--   Prog FLOAT NULL,
--   PRIMARY KEY (idContamin, idOrigin)
-- );

-- CREATE FUNCTION getDistance (id1 INT, id2 INT)
-- RETURNS FLOAT
-- DETERMINISTIC
-- BEGIN
--   DECLARE v_distance FLOAT;

--   SELECT distance FROM distance WHERE 
--   (idLocality1 = id1 AND idLocality2 = id2) OR 
--   (idLocality2 = id1 AND idLocality1 = id2)
--   INTO v_distance;

--   RETURN v_distance;
-- END;

-- CREATE PROCEDURE addContamination(v_idCont INT, v_firstCase DATE)
-- BEGIN
--     DECLARE v_trans FLOAT;
--     DECLARE v_isOrigin INT;
--     DECLARE v_idOrgin INT;

--     SET v_isOrigin := 0;
--     SELECT idOrigin INTO v_isOrigin FROM TransmissionScenario WHERE idOrigin = v_idCont LIMIT 1;

--     IF (v_isOrigin = 0) THEN
--         SELECT idLocality, Prog / getDistance(v_idCont, idLocality) AS trans FROM EvolutionStat
--         WHERE annoucementDate <= v_firstCase AND idLocality <> v_idCont ORDER BY trans DESC, Conc DESC LIMIT 1
--         INTO v_idOrgin, v_trans;

--         INSERT IGNORE INTO TransmissionScenario VALUES
--         (v_idOrgin, v_idCont, v_firstCase, v_trans);
--     END IF;
-- END;

-- CREATE PROCEDURE generateScenario()
-- BEGIN
--     DECLARE done INT DEFAULT FALSE;
--     DECLARE v_idLoc INT;
--     DECLARE v_firstCase DATE;
--     DECLARE c_localityFirstCase CURSOR FOR
--     SELECT idLocality, (
--         SELECT annoucementDate FROM EvolutionStat
--         WHERE idLocality = t.idLocality
--         ORDER BY annoucementDate ASC LIMIT 1
--     ) AS firstCase FROM EvolutionStat t
--     GROUP BY idLocality ORDER BY firstCase ASC;
--     DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

--     TRUNCATE TransmissionScenario;

--     OPEN c_localityFirstCase;

--     scenario:REPEAT
--         IF done THEN
--             LEAVE scenario;
--         END IF;

--         FETCH c_localityFirstCase INTO v_idLoc, v_firstCase;

--         IF (v_firstCase IS NOT NULL) THEN

--             CALL addContamination(v_idLoc, v_firstCase);

--         END IF;

--         UNTIL done
--     END REPEAT scenario;

--     CLOSE c_localityFirstCase;
-- END;
